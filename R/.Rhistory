df_red3 <- df_red1 %>% select(tam_loc, est_socio, clase_hog, sexo_jefe, educa_jefe, ing_cor, gasto_mon, educacion, Estado)
net3 <- hc(df_red3)
strength3 <- arc.strength(net3, df_red3)
strength.plot(net3, strength3, shape='ellipse')
df_red4 <- concentradohogar %>% select(tam_loc, est_socio, clase_hog, sexo_jefe, educa_jefe, ing_cor, gasto_mon, educacion, Estado, AMBITO, decil_ingreso) %>% filter(complete.cases(.))
net4 <- hc(df_red4)
strength4 <- arc.strength(net4, df_red4)
strength.plot(net4, strength4, shape='ellipse')
head(concentradohogar)
gastoshogar <- read.dbf('../Datos/INEGI/Gastos en los hogares.dbf')
table(gastoshogar$clave)
plot(table(gastoshogar$clave))
prop.table(table(gastoshogar$clave))
qplot(prop.table(table(gastoshogar$clave)))
col.names(prop.table(table(gastoshogar$clave)))
names(prop.table(table(gastoshogar$clave)))
df_temp <- data.frame(gasto=names(prop.table(table(gastoshogar$clave))), prop=prop.table(table(gastoshogar$clave)))
ggplot(df_temp) + geom_bat(aes(x=gasto, y=prop), stat='identity')
ggplot(df_temp) + geom_bar(aes(x=gasto, y=prop), stat='identity')
names(df_temp)
head(df_temp)
ggplot(df_temp) + geom_bar(aes(x=gasto, y=prop.Freq), stat='identity')
net4boot <- boot.strength(df_red4, R=20, algorithm='hc', algorithm.args=list(score='bic'), cpdag=FALSE)
library(foreign)
library(ggthemes)
library(knitr)
library(rgdal)
library(igraph)
library(Matrix)
library(googleVis)
library(ggmap)
library(xtable)
library(ineq)
library(bnlearn)
library(grid) #función unit
library(dplyr)
library(tidyr)
library(ggplot2)
net4boot <- boot.strength(df_red4, R=20, algorithm='hc', algorithm.args=list(score='bic'), cpdag=FALSE)
net4boot <- boot.strength(df_red4, R=20, algorithm='hc', cpdag=FALSE)
df_temp
head(df_temp)
rm(df_temp)
net4avg <- averaged.network(net4boot, names(df_red4), 0.8)
strengthavg <- arc.strength(net4avg, df_red4)
strength.plot(net4avg, strengthavg, shape='ellipse', main='Red promedio con bootstrap')
net4boot <- boot.strength(df_red4, R=50, algorithm='hc', cpdag=FALSE)
net4avg <- averaged.network(net4boot, names(df_red4), 0.8)
strengthavg <- arc.strength(net4avg, df_red4)
strength.plot(net4avg, strengthavg, shape='ellipse', main='Red promedio con bootstrap')
net4boot <- boot.strength(df_red4, R=150, algorithm='hc', cpdag=FALSE)
net4avg <- averaged.network(net4boot, names(df_red4), 0.8)
strengthavg <- arc.strength(net4avg, df_red4)
strength.plot(net4avg, strengthavg, shape='ellipse', main='Red promedio con bootstrap')
View(de_red4)
View(df_red4)
strength.plot(net4, strength4, shape='ellipse')
dim(concentradohogar)
plot(net2,  			#the graph to be plotted
layout=layout.fruchterman.reingold,	# the layout method. see the igraph documentation for details
main='Red con relaciones más fuertes',	#specifies the title
vertex.label.dist=0.5,			#puts the name labels slightly off the dots
vertex.frame.color='white', 		#the color of the border of the dots
vertex.label.color='black',		#the color of the name labels
vertex.label.font=1,			#the font of the name labels
vertex.label=V(net2)$name,		#specifies the lables of the vertices. in this case the 'name' attribute is used
vertex.label.cex=1,			#specifies the size of the font of the labels. can also be made to vary
vertex.size=5,
vertex.label.cex=3
)
strength1 <- arc.strength(net1, df_red1)
net2 <- graph.edgelist(as.matrix(strength1[1:100,1:2]))
#V(net2)$size<-5
E(net2)$arrow.size=0.3
plot(net2,  			#the graph to be plotted
layout=layout.fruchterman.reingold,	# the layout method. see the igraph documentation for details
main='Red con relaciones más fuertes',	#specifies the title
vertex.label.dist=0.5,			#puts the name labels slightly off the dots
vertex.frame.color='white', 		#the color of the border of the dots
vertex.label.color='black',		#the color of the name labels
vertex.label.font=1,			#the font of the name labels
vertex.label=V(net2)$name,		#specifies the lables of the vertices. in this case the 'name' attribute is used
vertex.label.cex=1,			#specifies the size of the font of the labels. can also be made to vary
vertex.size=5,
vertex.label.cex=3
)
strength.plot(net2, strength2, shape='ellipse')
vars <- unique(c(strength1[1:50,1], strength1[1:50,2]))
df_red2 <- df_red1[,vars]
load('./Rdata/net2.RData')
strength2 <- arc.strength(net2, df_red2)
strength.plot(net2, strength2, shape='ellipse')
graphviz.plot(net2)
load('./Rdata/net5boot.RData')
net5avg <- averaged.network(net5boot, names(df_red4), 0.9)
library(foreign)
library(ggthemes)
library(knitr)
library(rgdal)
library(igraph)
library(Matrix)
library(googleVis)
library(ggmap)
library(xtable)
library(ineq)
library(mclust)
library(kfigr)
library(bnlearn)
library(grid) #función unit
library(dplyr)
library(tidyr)
library(ggplot2)
net5avg <- averaged.network(net5boot, names(df_red4), 0.9)
graphviz.plot(net5avg, shape='ellipse')
load('./Rdata/mclust1.RData')
cl_p <- data.frame(cluster = mclust1$classification, df_red4)
head(cl_p)
table(cl_p$cluster)
netcl <- hc(cl_p)
graphviz.plot(netcl, shape='ellipse')
ineq(filter(cl_p, cluster==1))
ineq(select(filter(cl_p, cluster==1)), ing_cor)
select(filter(cl_p, cluster==1)), ing_cor
select(filter(cl_p, cluster==1)), ing_cor)
select(filter(cl_p, cluster==1), ing_cor)
ineq(select(filter(cl_p, cluster==1), ing_cor))
ineq(as.numeric(select(filter(cl_p, cluster==1), ing_cor)))
select(filter(cl_p, cluster==1), ing_cor)
head(select(filter(cl_p, cluster==1), ing_cor))
as.numeric(select(filter(cl_p, cluster==1), ing_cor))
cl_p[cl_p$cluster==1,'ing_cor']
ineq(cl_p[cl_p$cluster==1,'ing_cor'])
ineq(cl_p[cl_p$cluster==2,'ing_cor'])
ineq(cl_p[cl_p$cluster==3,'ing_cor'])
11/14
mean(cl_p[cl_p$cluster==1,'ing_cor'])
mean(cl_p[cl_p$cluster==2,'ing_cor'])
mean(cl_p[cl_p$cluster==3,'ing_cor'])
library(foreign)
library(ggthemes)
library(knitr)
library(rgdal)
library(igraph)
library(Matrix)
library(googleVis)
library(ggmap)
library(xtable)
library(ineq)
library(mclust)
library(kfigr)
library(bnlearn)
library(grid) #función unit
library(dplyr)
library(tidyr)
library(ggplot2)
?median
median(concentradohogar$ing_cor)
?quantile
quantile(concentradohogar$ing_cor, probs=c(0.01, 0.2, 0.5, 0.7, 0.9))
ggplot(concentradohogar) + geom_boxplot(aes(ing_cor))
?geom_boxplot
ggplot(concentradohogar) + geom_boxplot(ing_cor)
ggplot(concentradohogar$ing_cor) + geom_boxplot()
ggplot(concentradohogar) + geom_boxplot(aes(x=concentradohogar))
ggplot(concentradohogar, aes(x=ing_cor)) + geom_density()
ggplot(concentradohogar, aes(x=ing_cor)) + geom_histogram()
sum(concentradohogar$ing_cor<2000)
sum(concentradohogar$ing_cor<20000)
sum(concentradohogar$ing_cor<5000)
sum(concentradohogar$ing_cor<3300)
91/nrow(concentradohogar)
sum(concentradohogar$ing_cor<11322.67)/nrow(concentradohogar)
sum(concentradohogar$ing_cor/concentradohogar$perc_ocupa<11322.67)/nrow(concentradohogar)
sum(concentradohogar$ing_cor/concentradohogar$perc_ocupa<2322.67)/nrow(concentradohogar)
sum(concentradohogar$ing_cor/concentradohogar$perc_ocupa<10000)/nrow(concentradohogar)
sum(concentradohogar$ing_cor/3*concentradohogar$perc_ocupa<10000)/nrow(concentradohogar)
sum(concentradohogar$ing_cor/(3*concentradohogar$perc_ocupa)<10000)/nrow(concentradohogar)
quantile(concentradohogar$ing_cor/(3*concentradohogar$perc_ocupa), probs=c(0.01, 0.2, 0.5, 0.7, 0.9))
sum(concentradohogar$decil_ingreso==1)
sum(concentradohogar$decil_ingreso==1)/nrow(concentradohogar)
sum(concentradohogar$decil_ingreso==10)/nrow(concentradohogar)
quantile(concentradohogar$ing_cor/(3*concentradohogar$perc_ocupa), probs=c(0.01, 0.2, 0.5, 0.7, 0.9))
concentradohogar <- within(concentradohogar, decil_ingreso <- factor(as.integer(cut(ing_cor, quantile(ing_cor, 0:10), include.lowest=TRUE))))
concentradohogar <- within(concentradohogar, decil_ingreso <- factor(as.integer(cut(ing_cor, 0:10), include.lowest=TRUE)))
sum(concentradohogar$decil_ingreso==10)/nrow(concentradohogar)
concentradohogar$decil_ingreso
Gini_Edo <- concentradohogar %>%
group_by(Estado) %>%
summarise(Gini=ineq(ing_cor))
edo_df_gini <- edo_df %>%
mutate(Estado = id) %>%
left_join(Gini_Edo)
ggplot() +
geom_polygon(data=edo_df_gini, aes(long, lat, group=group, fill=Gini), colour='black', inherit.aes=FALSE) +
coord_fixed() + scale_fill_gradientn(colours=c('light blue', 'dark blue')) + theme_nothing() + labs(fill='Índice\nde Gini')
library(foreign)
library(ggthemes)
library(knitr)
library(rgdal)
library(igraph)
library(Matrix)
library(googleVis)
library(ggmap)
library(xtable)
library(ineq)
#library(mclust)
library(kfigr)
library(bnlearn)
library(grid) #función unit
#library(flexmix)
library(R2jags)
library(dplyr)
library(tidyr)
library(ggplot2)
Gini_Edo <- concentradohogar %>%
group_by(Estado) %>%
summarise(Gini=ineq(ing_cor))
edo_df_gini <- edo_df %>%
mutate(Estado = id) %>%
left_join(Gini_Edo)
ggplot() +
geom_polygon(data=edo_df_gini, aes(long, lat, group=group, fill=Gini), colour='black', inherit.aes=FALSE) +
coord_fixed() + scale_fill_gradientn(colours=c('light blue', 'dark blue')) + theme_nothing() + labs(fill='Índice\nde Gini')
load('./Rdata/jags.fit.1.RData')
traceplot(jags.fit)
traceplot(jags.fit.1)
?lmer
traceplot(jags.fit.1)
library(foreign)
library(ggthemes)
library(knitr)
library(rgdal)
library(igraph)
library(Matrix)
library(googleVis)
library(ggmap)
library(xtable)
library(ineq)
#library(mclust)
library(kfigr)
library(bnlearn)
library(grid) #función unit
#library(flexmix)
library(R2jags)
library(dplyr)
library(tidyr)
library(ggplot2)
?dcat
modelo_1.txt <-
'
model{
for(i in 1:N) {
ing_cor[i] ~ dlnorm(y.hat[i], tau.y)
y.hat[i] <- a[est_socio[i]] + b1* clase_hog[i] + b2 * sexo_jefe[i]
}
b1 ~ dnorm(0, 0.0001)
b2 ~ dnorm(0, 0.0001)
tau.y <- pow(sigma.y, -2)
sigma.y ~ dunif(0, 100)
for(j in 1:J){
a[j] ~ dnorm(mu.a, tau.a)
}
mu.a ~ dnorm(0, 0.0001)
tau.a <- pow(sigma.a, -2)
sigma.a ~ dunif(0, 100)
}
'
cat(modelo_1.txt, file = './Modelos/modelo_1.txt')
N <- nrow(df_red1)
J <- length(levels(df_red1$est_socio))
ing_cor <- df_red1$ing_cor
est_socio <- df_red1$est_socio
clase_hog <- df_red1$clase_hog
sexo_jefe <- df_red1$sexo_jefe
jags.data <- list("ing_cor", "est_socio", "clase_hog", "sexo_jefe", "N", "J")
jags.inits <- function(){
list("sigma.y" = runif(1),
"b1" = runif(1),
"b2" = runif(1),
"a" = runif(J),
"mu.a" = runif(1),
"sigma.a" = runif(1))
}
jags.parameters <-  c("sigma.y","b1","b2", "a", "mu.a", "sigma.a")
# Y usamos la función jags (más adelante discutiremos los otros parámetros de
# la función)
jags.fit.1 <- jags(data = jags.data, inits = jags.inits,
model.file = "./Modelos/modelo_1.txt", parameters.to.save = jags.parameters,
n.chains = 4, n.iter = 100)
traceplot(jags.fit.1)
jags.fit.1 <- jags(data = jags.data, inits = jags.inits,
model.file = "./Modelos/modelo_1.txt", parameters.to.save = jags.parameters,
n.chains = 4, n.iter = 1000)
traceplot(jags.fit.1)
save(jags.fit.1, file='./Rdata/jags.fit.1.RData')
ggplot(data=concentradohogar) + geom_histogram(aes(y = ing_cor)) +
stat_function(fun = dlnorm, size=1, color='gray')
ggplot(data=concentradohogar$ing_cor) + geom_histogram() +
stat_function(fun = dlnorm, size=1, color='gray')
ggplot(data=concentradohogar, aes(ing_cor)) + geom_histogram() +
stat_function(fun = dlnorm, size=1, color='gray')
ggplot(data=concentradohogar, aes(ing_cor)) + geom_histogram(aes(y=..count../sum(..count..))) +
stat_function(fun = dlnorm, size=1, color='gray')
ggplot(data=concentradohogar, aes(ing_cor)) + geom_histogram(aes(y=..count../sum(..count..))) +
stat_function(fun = dgamma, size=1, color='gray')
ggplot(data=concentradohogar, aes(ing_cor)) + geom_histogram(aes(y=..count../sum(..count..))) +
stat_function(fun = gamma, size=1, color='gray')
ggplot(data=concentradohogar, aes(ing_cor)) + geom_histogram(aes(y=..count../sum(..count..))) +
stat_function(fun = dlnorm, size=1, color='gray')
ggplot(data=concentradohogar, aes(ing_cor)) + geom_histogram(aes(y=..count../sum(..count..))) +
stat_function()
ggplot(data=concentradohogar, aes(ing_cor)) + geom_histogram(aes(y=..count../sum(..count..))) +
stat_function(fun = dlnorm, size=1, color='gray')
ggplot(data=concentradohogar, aes(ing_cor)) + geom_histogram(aes(y=..count../sum(..count..))) +
stat_function(fun = gamma, size=1, color='gray')
ggplot(data=concentradohogar, aes(ing_cor)) + geom_histogram(aes(y=..count../sum(..count..))) +
stat_function(fun = dgamma, size=1, color='gray')
ggplot(data=concentradohogar, aes(ing_cor)) + geom_histogram(aes(y = ..density..)) +
stat_function(fun = dgamma, size=1, color='gray')
ggplot(data=concentradohogar, aes(ing_cor)) + geom_histogram(aes(y = ..density..)) +
stat_function(fun = lnorm, size=1, color='gray')
ggplot(data=concentradohogar, aes(ing_cor)) + geom_histogram(aes(y = ..density..)) +
stat_function(fun = dlnorm, size=1, color='gray')
ggplot(data=concentradohogar, aes(ing_cor)) + geom_histogram(aes(y=..count../sum(..count..))) +
stat_function(fun = dlnorm, size=1, color='gray')
ggplot(data=concentradohogar, aes(ing_cor)) + geom_histogram(aes(y=..count../sum(..count..))) +
stat_function(fun = dnorm, size=1, color='gray')
ggplot(data=concentradohogar, aes(ing_cor)) + geom_histogram(aes(y=..count../sum(..count..))) +
stat_density(colour="blue", geom="line", position="identity") +
stat_function(fun=dnorm, args=list(mean=mean(concentradohogar$ing_cor), sd=sd(concentradohogar$ing_cor)))
ggplot(data=concentradohogar, aes(ing_cor)) + geom_histogram(aes(y=..count../sum(..count..))) +
stat_density(colour="blue", geom="line", position="identity") +
stat_function(fun=dgamma, args=list(shape=mean(concentradohogar$ing_cor)^2/sd(concentradohogar$ing_cor)^2, scale=sd(concentradohogar$ing_cor)^2/mean(concentradohogar$ing_cor)))
ggplot(data=concentradohogar, aes(ing_cor)) + geom_histogram(aes(y=..count../sum(..count..))) + xlim(0, 10000)+
stat_density(colour="blue", geom="line", position="identity") +
stat_function(fun=dgamma, args=list(shape=mean(concentradohogar$ing_cor)^2/sd(concentradohogar$ing_cor)^2, scale=sd(concentradohogar$ing_cor)^2/mean(concentradohogar$ing_cor)))
ggplot(data=concentradohogar, aes(ing_cor/1000)) + geom_histogram(aes(y=..count../sum(..count..))) + xlim(0, 10000)+
stat_density(colour="blue", geom="line", position="identity") +
stat_function(fun=dgamma, args=list(shape=mean(concentradohogar$ing_cor)^2/sd(concentradohogar$ing_cor)^2, scale=sd(concentradohogar$ing_cor)^2/mean(concentradohogar$ing_cor)))
ggplot(data=concentradohogar, aes(ing_cor/1000)) + geom_histogram(aes(y=..count../sum(..count..))) +
stat_density(colour="blue", geom="line", position="identity") +
stat_function(fun=dgamma, args=list(shape=mean(concentradohogar$ing_cor)^2/sd(concentradohogar$ing_cor)^2, scale=sd(concentradohogar$ing_cor)^2/mean(concentradohogar$ing_cor)))
ggplot(data=concentradohogar, aes(ing_cor/10000)) + geom_histogram(aes(y=..count../sum(..count..))) +
stat_density(colour="blue", geom="line", position="identity") +
stat_function(fun=dgamma, args=list(shape=mean(concentradohogar$ing_cor)^2/sd(concentradohogar$ing_cor)^2, scale=sd(concentradohogar$ing_cor)^2/mean(concentradohogar$ing_cor)))
ggplot(data=concentradohogar, aes(ing_cor/100000)) + geom_histogram(aes(y=..count../sum(..count..))) +
stat_density(colour="blue", geom="line", position="identity") +
stat_function(fun=dgamma, args=list(shape=mean(concentradohogar$ing_cor)^2/sd(concentradohogar$ing_cor)^2, scale=sd(concentradohogar$ing_cor)^2/mean(concentradohogar$ing_cor)))
ggplot(data=concentradohogar, aes(ing_cor/50000)) + geom_histogram(aes(y=..count../sum(..count..))) +
stat_density(colour="blue", geom="line", position="identity") +
stat_function(fun=dgamma, args=list(shape=mean(concentradohogar$ing_cor)^2/sd(concentradohogar$ing_cor)^2, scale=sd(concentradohogar$ing_cor)^2/mean(concentradohogar$ing_cor)))
ggplot(data=concentradohogar, aes(ing_cor/40000)) + geom_histogram(aes(y=..count../sum(..count..))) +
stat_density(colour="blue", geom="line", position="identity") +
stat_function(fun=dgamma, args=list(shape=mean(concentradohogar$ing_cor)^2/sd(concentradohogar$ing_cor)^2, scale=sd(concentradohogar$ing_cor)^2/mean(concentradohogar$ing_cor)))
ggplot(data=concentradohogar, aes(ing_cor/20000)) + geom_histogram(aes(y=..count../sum(..count..))) +
stat_density(colour="blue", geom="line", position="identity") +
stat_function(fun=dgamma, args=list(shape=mean(concentradohogar$ing_cor)^2/sd(concentradohogar$ing_cor)^2, scale=sd(concentradohogar$ing_cor)^2/mean(concentradohogar$ing_cor)))
ggplot(data=concentradohogar, aes(ing_cor/20000)) + geom_histogram(aes(y=..count../sum(..count..))) +
stat_density(colour="grey", geom="line", position="identity") +
stat_function(fun=dgamma, args=list(shape=mean(concentradohogar$ing_cor)^2/sd(concentradohogar$ing_cor)^2, scale=sd(concentradohogar$ing_cor)^2/mean(concentradohogar$ing_cor)))
ggplot(data=concentradohogar, aes(log(ing_cor)) + geom_histogram(aes(y=..count../sum(..count..)))
ggplot(data=concentradohogar, aes(log(ing_cor))) + geom_histogram(aes(y=..count../sum(..count..)))
ggplot(data=concentradohogar, aes(log(ing_cor))) + geom_histogram(aes(y=..count../sum(..count..))) +
stat_density(colour="grey", geom="line", position="identity") +
stat_function(fun=norm, args=list(mean=mean(log(ing_cor)), sd=sd(log(ing_cor)))
)
ggplot(data=concentradohogar, aes(log(ing_cor))) + geom_histogram(aes(y=..count../sum(..count..))) +
stat_density(colour="grey", geom="line", position="identity") +
stat_function(fun=norm, args=list(mean=mean(log(ing_cor)), sd=sd(log(ing_cor))))
ggplot(data=concentradohogar, aes(log(ing_cor))) + geom_histogram(aes(y=..count../sum(..count..))) +
stat_density(colour="grey", geom="line", position="identity") +
stat_function(fun=dnorm, args=list(mean=mean(log(ing_cor)), sd=sd(log(ing_cor))))
ggplot(data=concentradohogar, aes(log(ing_cor))) + geom_histogram(aes(y=..count../sum(..count..))) +
stat_density(colour="grey", geom="line", position="identity") +
stat_function(fun=dnorm)
ggplot(data=concentradohogar, aes(log(gasto_mon))) + geom_histogram(aes(y=..count../sum(..count..))) +
stat_density(colour="grey", geom="line", position="identity") +
stat_function(fun=dnorm)
ggplot(data=concentradohogar, aes(log(ing_cor))) + geom_histogram(aes(y=..count../sum(..count..))) +
stat_density(colour="grey", geom="line", position="identity") +
stat_function(fun=dnorm, args=list(mean=mean(log(ing_cor)), sd=0.3*sd(log(ing_cor))))
ggplot(data=concentradohogar, aes(log(ing_cor))) + geom_histogram(aes(y=..count../sum(..count..))) +
stat_density(colour="grey", geom="line", position="identity") +
stat_function(fun=dnorm, args=list(mean=mean(log(ing_cor)), sd=3*sd(log(ing_cor))))
ggplot(data=concentradohogar, aes(log(ing_cor))) + geom_histogram(aes(y=..count../sum(..count..))) +
geom_density()
ggplot(data=concentradohogar, aes((ing_cor))) + geom_histogram(aes(y=..count../sum(..count..))) +
geom_density()
ggplot(data=concentradohogar, aes((ing_cor))) + geom_histogram(aes(y=..count../sum(..count..))) +
geom_density(colour='grey')
ggplot(data=concentradohogar, aes(log(ing_cor))) + geom_histogram(aes(y=..count../sum(..count..))) +
geom_density()
ggplot(data=concentradohogar, aes(log(gasto_mon))) + geom_histogram(aes(y=..count../sum(..count..))) +
geom_density()
ggplot(data=concentradohogar, aes(10*log(gasto_mon))) + geom_histogram(aes(y=..count../sum(..count..))) +
geom_density()
ggplot(data=concentradohogar, aes(5*log(gasto_mon))) + geom_histogram(aes(y=..count../sum(..count..))) +
geom_density()
ggplot(data=concentradohogar, aes(4*log(gasto_mon))) + geom_histogram(aes(y=..count../sum(..count..))) +
geom_density()
ggplot(data=concentradohogar, aes(3*log(gasto_mon))) + geom_histogram(aes(y=..count../sum(..count..))) +
geom_density()
ggplot(data=concentradohogar, aes(3*log(ing_cor))) + geom_histogram(aes(y=..count../sum(..count..))) +
geom_density()
exp(3)
ggplot(data=concentradohogar, aes(log(22*ing_cor))) + geom_histogram(aes(y=..count../sum(..count..))) +
geom_density()
ggplot(data=concentradohogar, aes(log(200*ing_cor))) + geom_histogram(aes(y=..count../sum(..count..))) +
geom_density()
ggplot(data=concentradohogar, aes(log(2000*ing_cor))) + geom_histogram(aes(y=..count../sum(..count..))) +
geom_density()
ggplot(data=concentradohogar, aes(log(.0002*ing_cor))) + geom_histogram(aes(y=..count../sum(..count..))) +
geom_density()
ggplot(data=concentradohogar, aes(3*log(ing_cor))) + geom_histogram(aes(y=..count../sum(..count..))) +
geom_density()
log_ing_cor <- log_df_red1$ing_cor
log_ing_cor <- log(df_red1$ing_cor)
jags.data.2 <- list("log_ing_cor", "est_socio", "clase_hog", "sexo_jefe", "N", "J")
# ahora definimss valores iniciales para los parámetros
jags.inits.2 <- function(){
list("sigma.y" = runif(1),
"b1" = runif(1),
"b2" = runif(1),
"a" = runif(J),
"mu.a" = runif(1),
"sigma.a" = runif(1))
}
# debemos especificar también el nombre de los parámetros que vamos a guardar
jags.parameters.2 <-  c("sigma.y","b1","b2", "a", "mu.a", "sigma.a")
jags.fit.2 <- jags(data = jags.data.1, inits = jags.inits.1,
model.file = "./Modelos/modelo_2.txt", parameters.to.save = jags.parameters.1,
n.chains = 4, n.iter = 100)
jags.parameters.2 <-  c("sigma.y","b1","b2", "a", "mu.a", "sigma.a")
jags.fit.2 <- jags(data = jags.data.2, inits = jags.inits.2,
model.file = "./Modelos/modelo_2.txt", parameters.to.save = jags.parameters.2,
n.chains = 4, n.iter = 100)
modelo_2.txt <-
'
model{
for(i in 1:N) {
log_ing_cor[i] ~ dnorm(y.hat[i], tau.y)
y.hat[i] <- a[est_socio[i]] + b1* clase_hog[i] + b2 * sexo_jefe[i]
}
b1 ~ dnorm(0, 0.0001)
b2 ~ dnorm(0, 0.0001)
tau.y <- pow(sigma.y, -2)
sigma.y ~ dunif(0, 100)
for(j in 1:J){
a[j] ~ dnorm(mu.a, tau.a)
}
mu.a ~ dnorm(0, 0.0001)
tau.a <- pow(sigma.a, -2)
sigma.a ~ dunif(0, 100)
}
'
cat(modelo_2.txt, file = './Modelos/modelo_2.txt')
jags.fit.2 <- jags(data = jags.data.2, inits = jags.inits.2,
model.file = "./Modelos/modelo_2.txt", parameters.to.save = jags.parameters.2,
n.chains = 4, n.iter = 100)
jags.parameters.2 <-  c("sigma.y","b1","b2", "a", "mu.a", "sigma.a")
jags.fit.2 <- jags(data = jags.data.2, inits = jags.inits.2,
model.file = "./Modelos/modelo_2.txt", parameters.to.save = jags.parameters.2,
n.chains = 4, n.iter = 1000)
save(jags.fit.2, file='./Rdata/jags.fit.2.RData')
traceplot(jags.fit.2)
jags.parameters.2 <-  c("sigma.y","b1","b2", "a", "mu.a", "sigma.a")
jags.fit.2 <- jags(data = jags.data.2, inits = jags.inits.2,
model.file = "./Modelos/modelo_2.txt", parameters.to.save = jags.parameters.2,
n.chains = 4, n.iter = 2000)
traceplot(jags.fit.2)
jags.fit.ing.1 <- jags.fit.1
save(jags.fit.ing.1, file='./Rdata/jags.fit.ing1.RData')
jags.fit.ing.2 <- jags.fit.2
save(jags.fit.ing.2, file='./Rdata/jags.fit.ing.2.RData')
jags.parameters.ing.1 <-  c("sigma.y","b1","b2", "a", "mu.a", "sigma.a")
jags.fit.ing.1 <- jags(data = jags.data.ing.1, inits = jags.inits.ing.1,
model.file = "./Modelos/modelo_1.txt", parameters.to.save = jags.parameters.ing.1,
n.chains = 4, n.iter = 2000)
save(jags.fit.ing.1, file='./Rdata/jags.fit.ing1.RData')
jags.data.ing.1 <- list("ing_cor", "est_socio", "clase_hog", "sexo_jefe", "N", "J")
# ahora definimss valores iniciales para los parámetros
jags.inits.ing.1 <- function(){
list("sigma.y" = runif(1),
"b1" = runif(1),
"b2" = runif(1),
"a" = runif(J),
"mu.a" = runif(1),
"sigma.a" = runif(1))
}
# debemos especificar también el nombre de los parámetros que vamos a guardar
jags.parameters.ing.1 <-  c("sigma.y","b1","b2", "a", "mu.a", "sigma.a")
jags.fit.ing.1 <- jags(data = jags.data.ing.1, inits = jags.inits.ing.1,
model.file = "./Modelos/modelo_1.txt", parameters.to.save = jags.parameters.ing.1,
n.chains = 4, n.iter = 2000)
save(jags.fit.ing.1, file='./Rdata/jags.fit.ing1.RData')
traceplot(jags.fit.1)
jags.data.ing.2 <- list("log_ing_cor", "est_socio", "clase_hog", "sexo_jefe", "N", "J")
# ahora definimss valores iniciales para los parámetros
jags.inits.ing.2 <- function(){
list("sigma.y" = runif(1),
"b1" = runif(1),
"b2" = runif(1),
"a" = runif(J),
"mu.a" = runif(1),
"sigma.a" = runif(1))
}
# debemos especificar también el nombre de los parámetros que vamos a guardar
jags.parameters.ing.2 <-  c("sigma.y","b1","b2", "a", "mu.a", "sigma.a")
jags.fit.ing.2 <- jags(data = jags.data.ing.2, inits = jags.inits.ing.2,
model.file = "./Modelos/modelo_2.txt", parameters.to.save = jags.parameters.ing.2,
n.chains = 4, n.iter = 2000)
save(jags.fit.ing.2, file='./Rdata/jags.fit.ing.2.RData')
